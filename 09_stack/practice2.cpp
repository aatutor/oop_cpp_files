#include <iostream>
// #include <stack>

/*
	Ханойская башня.

	Даны три стержня, на один из которых нанизаны восемь колец, 
	причём кольца отличаются размером и лежат меньшее на большем. 
	Задача состоит в том, чтобы перенести пирамиду из восьми колец 
	за наименьшее число ходов на другой стержень. За один раз 
	разрешается переносить только одно кольцо, причём нельзя класть 
	большее кольцо на меньшее.
*/

class Ring {
	int radius_;
	...
};

template <typename T> class Stack {
	...
};

class Bar {
	Stack<Ring*> st_; // или std::stack<Ring*>
	...
};

class Hanoy {
	Bar bars_[3];
	void ShowState(); // console output
	...
};

int main()
{
	Hanoy tower(4);

#if 0
	tower.Solve();
#else
	while(tower.IsSolved() == false)
		tower.Move();
#endif

	return 0;
}

/*
	Циклическое решение:
	Обозначим через «1-2» такое действие: переложить диск или с 1-го штыря на 2-й, 
	или со 2-го на 1-й, в зависимости от того, где он меньше. Тогда, чтобы решить 
	головоломку с чётным количеством дисков, надо многократно повторять действия: 
	1-2, 1-3, 2-3. Если число дисков нечётно — 1-3, 1-2, 2-3. 
*/